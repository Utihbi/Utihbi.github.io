<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菜鸟生活</title>
  <subtitle>菜鸟也有梦想！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://utihbi.github.io/"/>
  <updated>2016-08-31T09:27:27.285Z</updated>
  <id>https://utihbi.github.io/</id>
  
  <author>
    <name>Emerson</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>过滤集合Collection</title>
    <link href="https://utihbi.github.io/2016/08/31/%E8%BF%87%E6%BB%A4%E9%9B%86%E5%90%88Collection/"/>
    <id>https://utihbi.github.io/2016/08/31/过滤集合Collection/</id>
    <published>2016-08-31T09:20:07.000Z</published>
    <updated>2016-08-31T09:27:27.285Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//1.0 直接遍历过滤&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Iterator&amp;lt;Integer&amp;gt; itr = list.iterator();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	while(itr.hasNext()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		int i = itr.next();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if (i &amp;gt; 5) &amp;#123; // filter all ints bigger than 5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			itr.remove();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//2.0通用方法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// filter&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;interface Predicate&amp;lt;T&amp;gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	boolean test(T o);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Filter&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	public static &amp;lt;T&amp;gt; void filter(Collection&amp;lt;T&amp;gt; c,Predicate&amp;lt;T&amp;gt; p) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if(null != c &amp;amp;&amp;amp; null != p)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			Iterator&amp;lt;T&amp;gt; itr = c.iterator();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			while(itr.hasNext())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				T obj = itr.next();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				if(!p.test(obj))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					itr.remove();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class SimpleTest &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 * @param args&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	public static void main(String[] args) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		// TODO Auto-generated method stub&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		SimpleTest sdt = new SimpleTest();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		sdt.filterCollection();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	private void filterCollection() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Integer[] iarr = &amp;#123;1,2,3,8&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;Integer&amp;gt;(Arrays.asList(iarr));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Filter.filter(list , new Predicate&amp;lt;Integer&amp;gt;() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			@Override&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			public boolean test(Integer o) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				// TODO Auto-generated method stub&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				return o.intValue() &amp;lt;= 5;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(Arrays.toString(iarr));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(list);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	/*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* output:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* [1, 2, 3, 8]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* [1, 2, 3]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>convert between int[] and List</title>
    <link href="https://utihbi.github.io/2016/08/31/convert%20between%20int%5B%5D%20and%20List/"/>
    <id>https://utihbi.github.io/2016/08/31/convert between int[] and List/</id>
    <published>2016-08-31T08:34:15.000Z</published>
    <updated>2016-08-31T08:44:47.991Z</updated>
    
    <content type="html">&lt;h2 id=&quot;How-to-convert-List-to-int&quot;&gt;&lt;a href=&quot;#How-to-convert-List-to-int&quot; class=&quot;headerlink&quot; title=&quot;How to convert List to int[]?&quot;&gt;&lt;/a&gt;How to convert List to int[]?&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//The easiest way might be using ArrayUtils in Apache Commons Lang library.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;int[] array = ArrayUtils.toPrimitive(list.toArray(new Integer[0]));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//In JDK, there is no short-cut. Note that you can not use List.toArray(), because that&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//will convert List to Integer[]. The correct way is following,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;int[] array = new int[list.size()];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for(int i=0; i &amp;lt; list.size(); i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	array[i] = list.get(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;How-to-convert-int-into-List&quot;&gt;&lt;a href=&quot;#How-to-convert-int-into-List&quot; class=&quot;headerlink&quot; title=&quot;How to convert int[] into List?&quot;&gt;&lt;/a&gt;How to convert int[] into List?&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//The easiest way might still be using ArrayUtils in Apache Commons Lang library, like below.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;List list = Arrays.asList(ArrayUtils.toObject(array));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//In JDK, there is no short-cut either.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;int[] array = &amp;#123;1,2,3,4,5&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;List&amp;lt;Integer&amp;gt; list = new ArrayList&amp;lt;Integer&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for(int i: array) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	list.add(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/** &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Arrays类中的asList方法 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * (1) 该方法对于基本数据类型的数组支持并不好,当数组是基本数据类型时不建议使用 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * (2) 当使用asList()方法时，数组就和列表链接在一起了. &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *     当更新其中之一时，另一个将自动获得更新。 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *     注意:仅仅针对对象数组类型,基本数据类型数组不具备该特性 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * (3) asList得到的数组是的没有add和remove方法的 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 阅读相关:通过查看Arrays类的源码可以知道,asList返回的List是Array中的实现的 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 内部类,而该类并没有定义add和remove方法.另外,为什么修改其中一个,另一个也自动 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 获得更新了,因为asList获得List实际引用的就是数组 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; int[] a_int = &amp;#123; 1, 2, 3, 4 &amp;#125;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; /* 预期输出应该是1,2,3,4,但实际上输出的仅仅是一个引用, 这里它把a_int当成了一个元素 */  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	List a_int_List = Arrays.asList(a_int);  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; /* 对象类型的数组使用asList,是我们预期的 */  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Integer[] a_Integer = new Integer[] &amp;#123; 1, 2, 3, 4 &amp;#125;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	List a_Integer_List = Arrays.asList(a_Integer);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;How-to-convert-List-to-int&quot;&gt;&lt;a href=&quot;#How-to-convert-List-to-int&quot; class=&quot;headerlink&quot; title=&quot;How to convert List to int[]?&quot;&gt;&lt;/a&gt;How t
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>泛型通配符？ 和 原生类型区别</title>
    <link href="https://utihbi.github.io/2016/08/31/%E6%B3%9B%E5%9E%8B%E9%80%9A%E9%85%8D%E7%AC%A6%EF%BC%9F%20%E5%92%8C%20%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%9E%8B%E5%8C%BA%E5%88%AB/"/>
    <id>https://utihbi.github.io/2016/08/31/泛型通配符？ 和 原生类型区别/</id>
    <published>2016-08-31T02:56:32.000Z</published>
    <updated>2016-08-31T03:09:11.701Z</updated>
    
    <content type="html">&lt;h2 id=&quot;java泛型通配符-未限定使用时和原生类型都可以表示任意类型，区别何在？&quot;&gt;&lt;a href=&quot;#java泛型通配符-未限定使用时和原生类型都可以表示任意类型，区别何在？&quot; class=&quot;headerlink&quot; title=&quot;java泛型通配符?未限定使用时和原生类型都可以表示任意类型，区别何在？&quot;&gt;&lt;/a&gt;java泛型通配符?未限定使用时和原生类型都可以表示任意类型，区别何在？&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;关于 Set&amp;lt;?&amp;gt; 的事实：

1. 因为集合被 ?  标注，故Set&amp;lt;?&amp;gt; 可容纳任意类型；
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//Legal Code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public static void main(String[] args) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	HashSet&amp;lt;Integer&amp;gt; s1 = new HashSet&amp;lt;Integer&amp;gt;(Arrays.asList(1, 2, 3));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printSet(s1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	HashSet&amp;lt;String&amp;gt; s2 = new HashSet&amp;lt;String&amp;gt;(Arrays.asList(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	printSet(s2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public static void printSet(Set&amp;lt;?&amp;gt; s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	for (Object o : s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(o);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;2. 因为不知道 ？代表那种类型，所有我们不能往 Set&amp;lt;?&amp;gt; 中添加任何元素(除了null)；
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//Illegal Code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public static void printSet(Set&amp;lt;?&amp;gt; s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	s.add(10);//this line is illegal &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	for (Object o : s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(o);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//legal Code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public static void printSet(Set s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	s.add(&amp;quot;2&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	for (Object o : s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(o);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//Illegal Code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Set&amp;lt;?&amp;gt; set = new HashSet&amp;lt;?&amp;gt;();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;综上：都可以代表任意元素，但添加动作仅限于原生类型，通配符限定一般用于形参。使用泛型可以保证类型安全，原生类型无法保证；&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;java泛型通配符-未限定使用时和原生类型都可以表示任意类型，区别何在？&quot;&gt;&lt;a href=&quot;#java泛型通配符-未限定使用时和原生类型都可以表示任意类型，区别何在？&quot; class=&quot;headerlink&quot; title=&quot;java泛型通配符?未限定使用时和原生类
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>日期处理</title>
    <link href="https://utihbi.github.io/2016/08/30/%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/"/>
    <id>https://utihbi.github.io/2016/08/30/日期处理/</id>
    <published>2016-08-30T12:10:10.000Z</published>
    <updated>2016-08-30T12:35:20.320Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// String -&amp;gt; Date&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SimpleDateFormat.parse(String);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// Date -&amp;gt; String&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SimpleDateFormat.format(date);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;|Letter    |Description    |Examples|&lt;br&gt;|——|——|——|&lt;br&gt;|y |Year|    2013|&lt;br&gt;|M |Month| in year    |July, 07, |&lt;br&gt;|d |Day  | in month    |1-31|&lt;br&gt;|E |Day  |name in week    |Friday, Sunday|&lt;br&gt;|a |Am/pm marker    |AM, PM|&lt;br&gt;|H |Hour in day    |0-23&lt;br&gt;|h |Hour in am/pm    |1-12|&lt;br&gt;|m |Minute in hour    |0-60|&lt;br&gt;|s |Second in minute    |0-60|&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Main()如何启动的？</title>
    <link href="https://utihbi.github.io/2016/08/30/Main()%E5%A6%82%E4%BD%95%E5%90%AF%E5%8A%A8%E7%9A%84%EF%BC%9F/"/>
    <id>https://utihbi.github.io/2016/08/30/Main()如何启动的？/</id>
    <published>2016-08-30T08:18:03.000Z</published>
    <updated>2016-08-30T12:26:26.638Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class HelloWorld &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* @param args&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	public static void main(String[] args) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		// TODO Auto-generated method stub&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		System.out.println(&amp;quot;Hello World&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;main()方法被触发前，JVM需要做以下一些事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;load&lt;/li&gt;
&lt;li&gt;link&lt;/li&gt;
&lt;li&gt;initialize the class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;load： 把对应类字节码加载进JVM中；&lt;br&gt;link： 链接包含所需的二进制类型的数据以便JVM使用。该环节包含3步：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. verification
    确保类(接口)结构类型正确；
2. preparation
    涉及类(接口)的内存分配；
3. optional resolution
    解决符号引用；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;initialize the class：类中成员变量初始化；&lt;/p&gt;
&lt;p&gt;加载工作是有类加载器来完成的。当JVM启动时，3个类加载器被使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动类(Bootstrap class loader):加载java核心类库，即位于 /jre/lib 下的类。它们JVM的核心部分，用本地代码编写的。&lt;/li&gt;
&lt;li&gt;扩展类(Extensions class loader)：加载在扩展目录下的类。Eg:/jre/lib/ext&lt;/li&gt;
&lt;li&gt;系统类(System class loader)：加载 CLASSPATH 下的类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，HelloWorld类将被系统类加载器来加载。当main()方法被执行时，它将触发它所依赖的那些类的load、link和initialize。&lt;br&gt;之后，main()栈帧被push进JVM栈中。PC(program counter) 根据情况设置。将 println()栈帧push进JVM栈中，当执行完成后，JVM栈将&lt;br&gt;依次POP。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Memory Leaks</title>
    <link href="https://utihbi.github.io/2016/08/29/Memory%20Leak/"/>
    <id>https://utihbi.github.io/2016/08/29/Memory Leak/</id>
    <published>2016-08-29T08:38:21.000Z</published>
    <updated>2016-08-29T08:51:50.863Z</updated>
    
    <content type="html">&lt;h2 id=&quot;什么是内存泄露？&quot;&gt;&lt;a href=&quot;#什么是内存泄露？&quot; class=&quot;headerlink&quot; title=&quot;什么是内存泄露？&quot;&gt;&lt;/a&gt;什么是内存泄露？&lt;/h2&gt;&lt;p&gt;一些对象不再被应用程序使用了，但是GC却不能回收它们，因为还有引用指向它们。&lt;/p&gt;
&lt;h2 id=&quot;为啥会发生？&quot;&gt;&lt;a href=&quot;#为啥会发生？&quot; class=&quot;headerlink&quot; title=&quot;为啥会发生？&quot;&gt;&lt;/a&gt;为啥会发生？&lt;/h2&gt;&lt;p&gt;当生命周期长的对象(假设叫A)持有一个生命周期短的对象(假设叫B)引用，B没有用时却不能被及时销毁。&lt;/p&gt;
&lt;h2 id=&quot;如何避免？&quot;&gt;&lt;a href=&quot;#如何避免？&quot; class=&quot;headerlink&quot; title=&quot;如何避免？&quot;&gt;&lt;/a&gt;如何避免？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;注意集合类的使用：HashMap, ArrayList等。当它们被申明为static时，它们的生命周期和应用程序一样长。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注意事件监听和回调。当监听器被注册后，没有用时却没有注销监听器，导致监听器一直存在。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类自己管理内存时，编程者要有内存泄露意识。一个对象的成员变量指向其他对象的引用要置null。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是内存泄露？&quot;&gt;&lt;a href=&quot;#什么是内存泄露？&quot; class=&quot;headerlink&quot; title=&quot;什么是内存泄露？&quot;&gt;&lt;/a&gt;什么是内存泄露？&lt;/h2&gt;&lt;p&gt;一些对象不再被应用程序使用了，但是GC却不能回收它们，因为还有引用指向它们。&lt;/p&gt;
&lt;h2
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>HashTable vs HashMap vs TreeMap</title>
    <link href="https://utihbi.github.io/2016/08/29/HashTable%20vs%20HashMap%20vs%20TreeMap/"/>
    <id>https://utihbi.github.io/2016/08/29/HashTable vs HashMap vs TreeMap/</id>
    <published>2016-08-29T07:16:53.000Z</published>
    <updated>2016-08-30T12:24:17.270Z</updated>
    
    <content type="html">&lt;p&gt;||HashMap | HashTable | TreeMap|&lt;br&gt;|——|——|——|——|&lt;br&gt;|顺序         |no        |    no        |    yes       |&lt;br&gt;|null(k-v)  | yes-yes    |    no-no    |    no—yes|&lt;br&gt;|同步        |no        |    yes        |    no        |&lt;br&gt;|效率        |O(1)    |    O(1)    |    O(lgN)    |&lt;br&gt;|实现方式    |buckets    |    buckets    |    红黑树|&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;||HashMap | HashTable | TreeMap|&lt;br&gt;|——|——|——|——|&lt;br&gt;|顺序         |no        |    no        |    yes       |&lt;br&gt;|null(k-v)  | yes-yes    |
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>怎样初始化得到一不可变map？</title>
    <link href="https://utihbi.github.io/2016/08/29/How%20to%20initialize%20a%20staticimmutable%20Map/"/>
    <id>https://utihbi.github.io/2016/08/29/How to initialize a staticimmutable Map/</id>
    <published>2016-08-29T03:25:34.000Z</published>
    <updated>2016-08-29T09:28:36.878Z</updated>
    
    <content type="html">&lt;p&gt;初始化一个不可变map，我们常常的做法是用修饰符“static final”；如下代码所示,&lt;br&gt;然而事实是初始化过后，我们人然可以继续操作该map，比如：Test.map.put(3,”Three”);&lt;br&gt;所以，这样的方法并没有真正的达到我们的要求。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//code 1 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Test &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	private static final Map map;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	static &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		map = new HashMap();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		map.put(1, &amp;quot;one&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		map.put(2, &amp;quot;two&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下面的代码在初始化最后用：Collections.unmodifiableMap() 来处理，如果此时试图添加元素会抛出&lt;br&gt;“UnsupportedOperationException”异常。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//code 2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Test &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	private static final Map map;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	static &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Map aMap = new HashMap();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		aMap.put(1, &amp;quot;one&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		aMap.put(2, &amp;quot;two&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		map = Collections.unmodifiableMap(aMap);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;初始化一个不可变map，我们常常的做法是用修饰符“static final”；如下代码所示,&lt;br&gt;然而事实是初始化过后，我们人然可以继续操作该map，比如：Test.map.put(3,”Three”);&lt;br&gt;所以，这样的方法并没有真正的达到我们的要求。&lt;br&gt;&lt;fig
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>questions of Java Strings</title>
    <link href="https://utihbi.github.io/2016/08/28/questions%20of%20Java%20Strings/"/>
    <id>https://utihbi.github.io/2016/08/28/questions of Java Strings/</id>
    <published>2016-08-28T09:25:30.000Z</published>
    <updated>2016-08-30T09:10:46.495Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Can we use string for switch statement?&lt;br&gt;Yes to version 7. From JDK 7, we can use string as switch condition. Before version 6, we can not use string as switch condition.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// java 7 only!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;switch (str.toLowerCase()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      case &amp;quot;a&amp;quot;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           value = 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      case &amp;quot;b&amp;quot;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           value = 2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to split a string with white space characters?&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String[] strArray = aString.split(&amp;quot;\\s+&amp;quot;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What substring() method really does?&lt;br&gt;In JDK 6, the substring() method gives a window to an array of chars which represents the existing String, but do not create a new one. To create a new string represented by a new char array, you can do add an empty string like the following:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;str.substring(m, n) + &amp;quot;&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This will create a new char array that represents the new string. The above approach sometimes can make your code faster, because Garbage Collector can collect the unused large string and keep only the sub string.&lt;/p&gt;
&lt;p&gt;In Oracle JDK 7, substring() creates a new char array, not uses the existing one. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;How to repeat a string?&lt;br&gt;we can use the repeat() method of StringUtils from Apache Commons Lang package.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String str = &amp;quot;abcd&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String repeated = StringUtils.repeat(str,3);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//abcdabcdabcd&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to convert string to date?&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String str = &amp;quot;Sep 17, 2013&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Date date = new SimpleDateFormat(&amp;quot;MMMM d, yy&amp;quot;, Locale.ENGLISH).parse(str);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(date);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//Tue Sep 17 00:00:00 EDT 2013&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to count ‘#’ of occurrences of a character in a string?&lt;br&gt;Use StringUtils from apache commons lang.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;int n = StringUtils.countMatches(&amp;quot;11112222&amp;quot;, &amp;quot;1&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(n);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to detect if a string contains only uppercase letter?&lt;br&gt;Use java.lang.Character&lt;br&gt;isUpperCase() and isLetter() ;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;Can we use string for switch statement?&lt;br&gt;Yes to version 7. From JDK 7, we can use string as switch condition. Before version 6
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Longest Palindromic Substring(LeetCode)</title>
    <link href="https://utihbi.github.io/2016/08/24/Longest%20Palindromic%20Substring(LeetCode)/"/>
    <id>https://utihbi.github.io/2016/08/24/Longest Palindromic Substring(LeetCode)/</id>
    <published>2016-08-24T08:38:34.000Z</published>
    <updated>2016-08-24T13:48:23.558Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Question-Longest-Palindromic-Substring&quot;&gt;&lt;a href=&quot;#Question-Longest-Palindromic-Substring&quot; class=&quot;headerlink&quot; title=&quot;Question:Longest Palindromic Substring&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems/longest-palindromic-substring/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Longest Palindromic Substring&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Given a string S, find the longest palindromic substring(最长回文子串)in S. 

You may assume that the maximum length of S is 1000, and there exists one 

unique longest palindromic substring.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt;    Make sure you understand what a palindrome means. A palindrome is a string which reads the same in both directions. &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;For example, &amp;quot;aba&amp;quot; is a palindome, &amp;quot;abc&amp;quot; is not.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;SourceCode&quot;&gt;&lt;a href=&quot;#SourceCode&quot; class=&quot;headerlink&quot; title=&quot;SourceCode:&quot;&gt;&lt;/a&gt;SourceCode:&lt;/h2&gt;&lt;h3 id=&quot;s1&quot;&gt;&lt;a href=&quot;#s1&quot; class=&quot;headerlink&quot; title=&quot;s1&quot;&gt;&lt;/a&gt;s1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//笔者提交版本；耗时：75ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public String longestPalindrome(String s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //1.边界控制&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(null == s || s.isEmpty())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return &amp;quot;&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int len = s.length();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(1 == len)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return s;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //2.logic&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //2.1 构造形如“#a#a#” 的字符串&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int oriArrLen = len*2+1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        StringBuilder oriArr = new StringBuilder(oriArrLen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = 0 ;i&amp;lt;len;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oriArr.append(&amp;apos;#&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oriArr.append(s.charAt(i));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        oriArr.append(&amp;apos;#&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //debug&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //System.out.println(oriArr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int maxLen = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int start = 0,end = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //2.2从头开始遍历&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int mid = 2;mid &amp;lt; oriArrLen; mid++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //debug&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //System.out.println(&amp;quot;mid&amp;quot;+mid);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            int curLen = 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            int i=mid-1,j=mid+1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            for(;i&amp;gt;=0&amp;amp;&amp;amp;j&amp;lt;oriArrLen;i--,j++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(oriArr.charAt(i) == oriArr.charAt(j))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    curLen += 2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;else&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if(maxLen &amp;lt; curLen)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                maxLen = curLen;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                start = i+1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                end = j-1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //debug&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //System.out.println(start+&amp;quot; &amp;quot;+end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(oriArr.charAt(start)==&amp;apos;#&amp;apos;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            start++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            end--;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        StringBuilder result = new StringBuilder(len);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //debug&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //System.out.println(start+&amp;quot; &amp;quot;+end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = start;i&amp;lt;=end;i +=2)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            result.append(oriArr.charAt(i));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return result.toString();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;s2&quot;&gt;&lt;a href=&quot;#s2&quot; class=&quot;headerlink&quot; title=&quot;s2&quot;&gt;&lt;/a&gt;s2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//该版本参考了Solution,采用DP；耗时：104ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;To improve over the brute force solution, we first observe how we can avoid unnecessary re-computation while validating palindromes. &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Consider the case &amp;apos;&amp;apos;ababa&amp;apos;&amp;apos;. If we already knew that &amp;apos;&amp;apos;bab&amp;apos;&amp;apos; is a palindrome, it is obvious that &amp;apos;&amp;apos;ababa&amp;apos;&amp;apos; must be a palindrome &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;since the two left and right end letters are the same.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;We define P(i,j)P(i,j) as following:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;P(i,j)= | true,if the substring Si…Sj is a palindrome&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	| false,otherwise.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;P(i,j)=&amp;#123;true,if the substring Si…Sj is a palindrome;false,otherwise. &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	Therefore,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	P(i, j) = ( P(i+1, j-1) &amp;amp;&amp;amp; S_i == S_j )&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;The base cases are:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	P(i, i) = true P(i,i)=true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	P(i, i+1) = ( S_i == S_&amp;#123;i+1&amp;#125; ) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;This yields a straight forward DP solution, which we first initialize the one and two letters palindromes, and work our way up finding all three letters palindromes, and so on...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Complexity Analysis&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Time complexity : O(n^2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Space complexity : O(n^2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public String longestPalindrome(String s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //1.边界控制&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(null == s || s.isEmpty())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return &amp;quot;&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int len = s.length();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(1 == len)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return s;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //2.logic&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //[i][j]代表从字符串位置i到j是否满足条件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        boolean[][] dpTab = new boolean[len][len];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//2.1 表格初始化&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //int max = 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int start = 0,end =0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = 0 ;i&amp;lt;len;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            dpTab[i][i] = true;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if(i!=len-1)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                dpTab[i][i+1] = s.charAt(i) == s.charAt(i+1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(dpTab[i][i+1])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    //max = 2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    start = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    end = i+1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//2.2 填写表格&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //最长回文统计step为长度&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int step=3 ; step &amp;lt;= len;step++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //i &amp;lt; len-step+1 注意边界&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            for(int i = 0;i &amp;lt; len-step+1;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                int j = i+step-1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                dpTab[i][j] = dpTab[i+1][j-1] &amp;amp;&amp;amp; (s.charAt(i) == s.charAt(j));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(dpTab[i][j])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    //max = step;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    start = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    end = j;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return s.substring(start,end+1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question-Longest-Palindromic-Substring&quot;&gt;&lt;a href=&quot;#Question-Longest-Palindromic-Substring&quot; class=&quot;headerlink&quot; title=&quot;Question:Longest
    
    </summary>
    
      <category term="LeetCode" scheme="https://utihbi.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://utihbi.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Longest Substring Without Repeating Characters(LeetCode)</title>
    <link href="https://utihbi.github.io/2016/08/22/Longest%20Substring%20Without%20Repeating%20Characters(LeetCode)/"/>
    <id>https://utihbi.github.io/2016/08/22/Longest Substring Without Repeating Characters(LeetCode)/</id>
    <published>2016-08-22T13:11:10.000Z</published>
    <updated>2016-08-24T13:50:19.187Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Question-Longest-Substring-Without-Repeating-Characters&quot;&gt;&lt;a href=&quot;#Question-Longest-Substring-Without-Repeating-Characters&quot; class=&quot;headerlink&quot; title=&quot;Question:Longest Substring Without Repeating Characters&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems/longest-substring-without-repeating-characters/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Longest Substring Without Repeating Characters&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Given a string, find the length of the longest substring 

without repeating characters.

Examples:

Given &amp;quot;abcabcbb&amp;quot;, the answer is &amp;quot;abc&amp;quot;, which the length is 3.

Given &amp;quot;bbbbb&amp;quot;, the answer is &amp;quot;b&amp;quot;, with the length of 1.

Given &amp;quot;pwwkew&amp;quot;, the answer is &amp;quot;wke&amp;quot;, with the length of 3. Note that the answer must be a substring, 

&amp;quot;pwke&amp;quot; is a subsequence and not a substring.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;SourceCode&quot;&gt;&lt;a href=&quot;#SourceCode&quot; class=&quot;headerlink&quot; title=&quot;SourceCode:&quot;&gt;&lt;/a&gt;SourceCode:&lt;/h2&gt;&lt;h3 id=&quot;s1&quot;&gt;&lt;a href=&quot;#s1&quot; class=&quot;headerlink&quot; title=&quot;s1&quot;&gt;&lt;/a&gt;s1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//笔者提交版本；耗时：14ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public int lengthOfLongestSubstring(String s) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int len = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //边界控制&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(null == s||s.isEmpty()||&amp;quot;&amp;quot;.equals(s))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return len;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(1 == (len = s.length()))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return len;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //可以走到这里说明最少有一个子串，用result存放最大长度&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int result = 1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //用来存放最长子串&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        StringBuilder sb = new StringBuilder(len);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        sb.append(s.charAt(0));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //遍历s，与最长子串比较&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = 1; i&amp;lt;len ;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            char obj = s.charAt(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            int sbLen = sb.length();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            int j = sbLen-1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //用obj 检查 最长子串中是否已存在 字符 obj，如果存在，那么此时的子串已经到头了，可以结束了&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //我们要开始寻找下一个子串了，故需要把重复的字符obj和其之前的的字符都删除。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            for(;j&amp;gt;=0;j--)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(obj == sb.charAt(j))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    sb.delete(0,j+1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //刚遍历的字符obj 加入到sb中；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sb.append(obj);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sbLen = sb.length();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            result = result &amp;lt; sbLen ? sbLen : result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;s2&quot;&gt;&lt;a href=&quot;#s2&quot; class=&quot;headerlink&quot; title=&quot;s2&quot;&gt;&lt;/a&gt;s2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//该版本参考了Discuss,还没看Discuss；耗时：ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//待写&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question-Longest-Substring-Without-Repeating-Characters&quot;&gt;&lt;a href=&quot;#Question-Longest-Substring-Without-Repeating-Characters&quot; class=&quot;h
    
    </summary>
    
      <category term="LeetCode" scheme="https://utihbi.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://utihbi.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>String to Integer(LeetCode)</title>
    <link href="https://utihbi.github.io/2016/08/22/String%20to%20Integer(LeetCode)/"/>
    <id>https://utihbi.github.io/2016/08/22/String to Integer(LeetCode)/</id>
    <published>2016-08-22T08:39:40.000Z</published>
    <updated>2016-08-22T08:46:25.571Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Question-String-to-Integer&quot;&gt;&lt;a href=&quot;#Question-String-to-Integer&quot; class=&quot;headerlink&quot; title=&quot;Question:String to Integer&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems/string-to-integer-atoi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;String to Integer&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Implement atoi to convert a string to an integer.

Hint: Carefully consider all possible input cases. If you want a challenge, please 

do not see below and ask yourself what are the possible input cases.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible 

to gather all the input requirements up front.

Requirements for atoi:

The function first discards as many whitespace characters as necessary until the first non-whitespace 

character is found. Then, starting from this character, takes an optional initial plus or minus sign 

followed by as many numerical digits as possible, and interprets them as a numerical value.

The string can contain additional characters after those that form the integral number, which are 

ignored and have no effect on the behavior of this function.

If the first sequence of non-whitespace characters in str is not a valid integral number, or if no 

such sequence exists because either str is empty or it contains only whitespace characters, no 

conversion is performed.

If no valid conversion could be performed, a zero value is returned. If the correct value is out of

the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;SourceCode&quot;&gt;&lt;a href=&quot;#SourceCode&quot; class=&quot;headerlink&quot; title=&quot;SourceCode:&quot;&gt;&lt;/a&gt;SourceCode:&lt;/h2&gt;&lt;h3 id=&quot;s1&quot;&gt;&lt;a href=&quot;#s1&quot; class=&quot;headerlink&quot; title=&quot;s1&quot;&gt;&lt;/a&gt;s1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//笔者提交版本；耗时：8ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public int myAtoi(String str) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(null == str || str.isEmpty() || &amp;quot;&amp;quot; == str||&amp;quot;+&amp;quot;.equals(str)||&amp;quot;-&amp;quot;.equals(str))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //&amp;quot;  -0012a42&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String tmpStr = str.trim();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int index = 0;//第一个不不符合数字格式的坐标，&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int len = tmpStr.length();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //遍历确定index&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = 0 ; i&amp;lt;len ;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            char ch = tmpStr.charAt(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            index = i+1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if(&amp;apos;-&amp;apos; == ch || &amp;apos;+&amp;apos; == ch)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(i == 0)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    continue;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;else&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    index = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if(ch &amp;lt;&amp;apos;0&amp;apos; || ch &amp;gt;&amp;apos;9&amp;apos;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 index = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //&amp;quot;      -11919730356x&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        index = index &amp;gt; 12 ? 12 :index;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //数字位数超出Int 直接截断；截断是注意保留的剩余部分绝对值要大于int。int位数加符号“+（-）”一共11位，取12 防止最高位是1或者2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String tmpResult = tmpStr.substring(0,index);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        long result = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        try&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //用long转满足 大于或小于int_max_value ,取最值；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            result = Long.parseLong(tmpResult);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;catch(Exception e)&amp;#123;//捕获 &amp;quot;+&amp;quot; &amp;quot;-&amp;quot;的异常//eg:input : &amp;quot;+-2&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            result = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         //result = Long.parseLong(tmpResult);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(result &amp;gt; Integer.MAX_VALUE)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return Integer.MAX_VALUE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(result &amp;lt; Integer.MIN_VALUE)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            return Integer.MIN_VALUE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return (int)result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;s2&quot;&gt;&lt;a href=&quot;#s2&quot; class=&quot;headerlink&quot; title=&quot;s2&quot;&gt;&lt;/a&gt;s2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//该版本参考了Discuss,还没看Discuss；耗时：ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//待写&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question-String-to-Integer&quot;&gt;&lt;a href=&quot;#Question-String-to-Integer&quot; class=&quot;headerlink&quot; title=&quot;Question:String to Integer&quot;&gt;&lt;/a&gt;Question
    
    </summary>
    
      <category term="LeetCode" scheme="https://utihbi.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://utihbi.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Reverse Integer(LeetCode)</title>
    <link href="https://utihbi.github.io/2016/08/22/Reverse%20Integer(LeetCode)/"/>
    <id>https://utihbi.github.io/2016/08/22/Reverse Integer(LeetCode)/</id>
    <published>2016-08-22T05:23:40.000Z</published>
    <updated>2016-08-22T05:27:29.187Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Question-Reverse-Integer&quot;&gt;&lt;a href=&quot;#Question-Reverse-Integer&quot; class=&quot;headerlink&quot; title=&quot;Question:Reverse Integer&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems/reverse-integer/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reverse Integer&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Reverse digits of an integer.

Example1: x = 123, return 321

Example2: x = -123, return -321
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;SourceCode&quot;&gt;&lt;a href=&quot;#SourceCode&quot; class=&quot;headerlink&quot; title=&quot;SourceCode:&quot;&gt;&lt;/a&gt;SourceCode:&lt;/h2&gt;&lt;h3 id=&quot;s1&quot;&gt;&lt;a href=&quot;#s1&quot; class=&quot;headerlink&quot; title=&quot;s1&quot;&gt;&lt;/a&gt;s1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//笔者提交版本；耗时：6ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public int reverse(int x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int tmpNum = Math.abs(x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        StringBuilder tmpStr = new StringBuilder(String.valueOf(tmpNum));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String result = (String)(x &amp;gt; 0 ? tmpStr.reverse().toString() : &amp;quot;-&amp;quot;+tmpStr.reverse().toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int re =0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//边界控制&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        try &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	re =Integer.parseInt(result);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125; catch (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			// TODO: handle exception&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return re;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;s2&quot;&gt;&lt;a href=&quot;#s2&quot; class=&quot;headerlink&quot; title=&quot;s2&quot;&gt;&lt;/a&gt;s2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//该版本参考了Discuss,还没看Discuss；耗时：ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//待写&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question-Reverse-Integer&quot;&gt;&lt;a href=&quot;#Question-Reverse-Integer&quot; class=&quot;headerlink&quot; title=&quot;Question:Reverse Integer&quot;&gt;&lt;/a&gt;Question:&lt;a hr
    
    </summary>
    
      <category term="LeetCode" scheme="https://utihbi.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://utihbi.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>ZigZag Conversion(LeetCode)</title>
    <link href="https://utihbi.github.io/2016/08/21/ZigZag%20Conversion(LeetCode)/"/>
    <id>https://utihbi.github.io/2016/08/21/ZigZag Conversion(LeetCode)/</id>
    <published>2016-08-21T14:22:06.000Z</published>
    <updated>2016-08-22T08:41:53.548Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Question-ZigZag-Conversion&quot;&gt;&lt;a href=&quot;#Question-ZigZag-Conversion&quot; class=&quot;headerlink&quot; title=&quot;Question:ZigZag Conversion&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems/zigzag-conversion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZigZag Conversion&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;The string &amp;quot;PAYPALISHIRING&amp;quot; is written in a zigzag pattern on a given number of 

rows like this: (you may want to display this pattern in a fixed font for better

legibility)

P   A   H   N
A P L S I I G
Y   I   R

And then read line by line: &amp;quot;PAHNAPLSIIGYIR&amp;quot;

Write the code that will take a string and make this conversion given a number of rows:

string convert(string text, int nRows);

convert(&amp;quot;PAYPALISHIRING&amp;quot;, 3) should return &amp;quot;PAHNAPLSIIGYIR&amp;quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;SourceCode&quot;&gt;&lt;a href=&quot;#SourceCode&quot; class=&quot;headerlink&quot; title=&quot;SourceCode:&quot;&gt;&lt;/a&gt;SourceCode:&lt;/h2&gt;&lt;h3 id=&quot;s1&quot;&gt;&lt;a href=&quot;#s1&quot; class=&quot;headerlink&quot; title=&quot;s1&quot;&gt;&lt;/a&gt;s1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//笔者提交版本；耗时：6ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public String convert(String s, int numRows) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(null == s)&amp;#123;return &amp;quot;&amp;quot;;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int len = s.length();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //边界控制要仔细啊，numRows &amp;lt;=1 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(numRows &amp;gt;= len||numRows &amp;lt;=1)&amp;#123;return s;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        StringBuilder result = new StringBuilder(len);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int step = numRows - 2 + numRows;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int lastLineNum = numRows -1 ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i= 0 ; i&amp;lt; numRows ;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //第一行和最后一行&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if(i==0 || i == lastLineNum)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                int j = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                while(j&amp;lt;len)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    result.append(s.charAt(j));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    j += step;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //中间行处理&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            else&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                int tmpStep = (lastLineNum-i)*2;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                //成对处理&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                int j = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                int k = j + tmpStep;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                while(j&amp;lt;len)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    result.append(s.charAt(j));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    j += step;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    if(k&amp;lt;len)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        result.append(s.charAt(k));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        k += step;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return result.toString();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;s2&quot;&gt;&lt;a href=&quot;#s2&quot; class=&quot;headerlink&quot; title=&quot;s2&quot;&gt;&lt;/a&gt;s2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//该版本参考了Discuss,还没看Discuss；耗时：ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//待写&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question-ZigZag-Conversion&quot;&gt;&lt;a href=&quot;#Question-ZigZag-Conversion&quot; class=&quot;headerlink&quot; title=&quot;Question:ZigZag Conversion&quot;&gt;&lt;/a&gt;Question
    
    </summary>
    
      <category term="LeetCode" scheme="https://utihbi.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://utihbi.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Java获取Class类型引用的比较</title>
    <link href="https://utihbi.github.io/2016/08/06/Java%E8%8E%B7%E5%8F%96Class%E7%B1%BB%E5%9E%8B%E5%BC%95%E7%94%A8%E7%9A%84%E6%AF%94%E8%BE%83/"/>
    <id>https://utihbi.github.io/2016/08/06/Java获取Class类型引用的比较/</id>
    <published>2016-08-06T00:35:06.000Z</published>
    <updated>2016-08-06T01:25:08.144Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Class类型引用获取方式&quot;&gt;&lt;a href=&quot;#Class类型引用获取方式&quot; class=&quot;headerlink&quot; title=&quot;Class类型引用获取方式&quot;&gt;&lt;/a&gt;Class类型引用获取方式&lt;/h2&gt;&lt;p&gt; 无论何时，只要你想在运行时使用类型信息，就必须首先获得对恰当的Class对象的引用；&lt;/p&gt;
&lt;p&gt; Class.forName();&lt;/p&gt;
&lt;p&gt; 通过实例对象的getClass();&lt;/p&gt;
&lt;p&gt; 类字面常量：Initable.class；&lt;/p&gt;
&lt;h2 id=&quot;类字面常量说明&quot;&gt;&lt;a href=&quot;#类字面常量说明&quot; class=&quot;headerlink&quot; title=&quot;类字面常量说明&quot;&gt;&lt;/a&gt;类字面常量说明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;类字面常量不会自动初始化该Class对象。为了使用类需要做的准备工作包括以下3个方面：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;- 加载 由类加载器执行

- 链接 验证字节码，为静态域分配空间，并且如果必须的话，将解析这个类创建的对其他类的所有引用

- 初始化 如果该类具有超类，则对其初始化，执行静态初始化器和静态初始化块。
&lt;/code&gt;&lt;/pre&gt;&lt;font color=&quot;red&quot;&gt;初始化被延迟到了对静态方法(构造器隐式地是静态的)或者非常数静态域进行首先引用时才执行&lt;/font&gt;

&lt;blockquote&gt;
&lt;p&gt;类字面常量初始化有效的实现了尽可能的“惰性”。详见代码：&lt;/p&gt;
&lt;p&gt;仅使用.class来获取类的引用时不会引发初始化；但Class.forName()却立即进行了初始化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import java.util.Random;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Initable&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    static final int staticFinal = 47;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    static final int staticFinal2 = ClassInitialization.rand.nextInt(1000);// the value is between 0 and 1000 which is returned ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    static&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&amp;quot;Initializing Initable&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Initable2&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    static int staticNonFinal = 147;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    static&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&amp;quot;Initializing Initable2&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class Initable3&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    static int staticNonFinal = 74;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    static&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&amp;quot;Initializing Initable3&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class ClassInitialization&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public static Random rand = new Random(47);// Random(long seed);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public static void main (String[] args) throws Exception&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Class initable = Initable.class; //不会引发类初始化;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        splitLine(&amp;quot;Initable&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(Initable.staticFinal);//编译期常量，不需对Initable类进行初始化就可以读取&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //splitLine();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(Initable.staticFinal2);//非编译期常量，强制对Initable类进行初始化&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        splitLine(null);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(Initable2.staticNonFinal);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //访问一个非final的static域，在读取之前，要求先进行链接(为这个域分配存储空间)和初始化(初始化该存储空间)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        splitLine(&amp;quot;Initable2&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Class initable3 = Class.forName(&amp;quot;Initable3&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        splitLine(&amp;quot;Initable3&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(Initable3.staticNonFinal);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public static void splitLine(String desc)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(null!= desc) System.out.println(&amp;quot;After creating &amp;quot;+desc+&amp;quot; ref&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&amp;quot;------------------------------------&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	/*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	*            output:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* After creating Initable ref&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* ------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* 47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* Initializing Initable&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* 258&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* ------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* Initializing Initable2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* 147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* After creating Initable2 ref&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* ------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* Initializing Initable3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* After creating Initable3 ref&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* ------------------------------------&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	* 74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考资料：Thinking in Java&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Class类型引用获取方式&quot;&gt;&lt;a href=&quot;#Class类型引用获取方式&quot; class=&quot;headerlink&quot; title=&quot;Class类型引用获取方式&quot;&gt;&lt;/a&gt;Class类型引用获取方式&lt;/h2&gt;&lt;p&gt; 无论何时，只要你想在运行时使用类型信息，就必须首先
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>快速排序</title>
    <link href="https://utihbi.github.io/2016/08/04/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%20/"/>
    <id>https://utihbi.github.io/2016/08/04/快速排序 /</id>
    <published>2016-08-04T11:58:13.463Z</published>
    <updated>2016-08-04T14:08:45.754Z</updated>
    
    <content type="html">&lt;h3 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;思想&lt;/strong&gt;：分治思想：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- 分解：数组A[p..r]被划分为两个(可能为空)子数组A[p..q-1]和A[q+1..r]，使得A[p..q-1]中的每一个元素都 &amp;lt;=A[q]，

        而A[q+1..r]中的每一个元素都都 &amp;gt;=A[q]。其中，计算下标q 也是划分过程的一部分。

- 解决：通过递归调用，对子数组A[p..q-1]和A[q+1..r]进行排序。

- 合并：子数组是原址排序的，所有不需要合并操作：数组A[p..r]已经有序。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;应用场景：适用于大量数据排序，是&lt;font color=&quot;red&quot;&gt;原址排序&lt;/font&gt;。譬如找一堆数据的第K大(小)元素。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;情景     时间复杂度    备注&lt;br&gt;  理想     O(nlgn)        &lt;font color=&quot;green&quot;&gt;划分平衡(划分是常数比例的)&lt;/font&gt;&lt;br&gt;  最坏     O(n^2)        划分非平衡&lt;/p&gt;
&lt;p&gt;不稳定排序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//java code&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;quickSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] array,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; end)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(start &amp;lt; end)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//r位置元素是最终元素的位置；&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r = partition(array,start,end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			quickSort(array,start,r-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			quickSort(array,r+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//实现对A[p..r]原址排序&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] array,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; end)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;comment&quot;&gt;//选一个基准元素作为比较的元素，为方便，我们选最后一个元素；&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x = array[end];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   * 将数组划分为3段：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   * start~i：元素 &amp;lt;= x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   * i~j: 元素 &amp;gt; x;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   * j~end：待处理的元素&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = start - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = start; j &amp;lt; end; j++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(array[j] &amp;lt;= x)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				swap(array,++i,j);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;comment&quot;&gt;//将基准元素放到自己的位置上；&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   swap(array,++i,end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] array,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//异或交换注意 i！= j;否则 自己异或 将使结果为 0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i == j)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		array[i] ^= array[j];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		array[j] ^= array[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		array[i] ^= array[j];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] array  = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[]&amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  quickSort(array,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,array.length-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ;i&amp;lt;array.length ;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		  System.out.println(array[i]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;快速排序&quot;&gt;&lt;a href=&quot;#快速排序&quot; class=&quot;headerlink&quot; title=&quot;快速排序&quot;&gt;&lt;/a&gt;快速排序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;思想&lt;/strong&gt;：分治思想：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- 分解：数组A[p..r]被划分为两个(
    
    </summary>
    
      <category term="算法" scheme="https://utihbi.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="排序" scheme="https://utihbi.github.io/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>IOException的正确处理方式</title>
    <link href="https://utihbi.github.io/2016/07/29/IOException%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/"/>
    <id>https://utihbi.github.io/2016/07/29/IOException的正确处理方式/</id>
    <published>2016-07-29T02:35:06.000Z</published>
    <updated>2016-07-30T02:48:59.150Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IO&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	字节流：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			InputStream,OutputStream&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	字符流：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			Reader,Writer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IO所有操作都有IOException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import java.io.*;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;class FileWriterDemo&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	public static void main(String [] args)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//定义在外面，否则finally 中的fw 找不到&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		FileWriter fw  = null;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		try&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//创建文件,若文件已存在，会干掉&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			fw = new FileWriter(&amp;quot;FileWriterDemo.txt&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//创建文件,若文件已存在，末尾追加内容&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//fw = new FileWriter(&amp;quot;FileWriterDemo.txt&amp;quot;,true);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			fw.write(&amp;quot;aabc&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;catch(IOException e)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			System.out.println(e.toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;finally&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			try&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				if(null != fw)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					fw.close();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					/*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					关闭资源一定要执行，放在finally中(外层);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					关闭操作有IOException：故 try&amp;#123;&amp;#125;catch&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					创建文件就抛出异常，fw==null ；故需判断&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					*/ &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;catch(IOException e)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				System.out.println(e.toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
      <category term="JAVA" scheme="https://utihbi.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://utihbi.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>word转PDF遇到的图片问题</title>
    <link href="https://utihbi.github.io/2016/07/28/word%E8%BD%ACPDF%E9%81%87%E5%88%B0%E7%9A%84%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/"/>
    <id>https://utihbi.github.io/2016/07/28/word转PDF遇到的图片问题/</id>
    <published>2016-07-28T13:09:06.000Z</published>
    <updated>2016-07-28T13:43:53.924Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;笔者用rose画了个活动图，粘贴到word中，直接保存为PDF，打开之后，我的活动图就

光芒万丈了。上图：

word：
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://oald9ve1g.bkt.clouddn.com/hexo/img/word.png&quot; alt=&quot;word图&quot;&gt;&lt;br&gt;    PDF:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oald9ve1g.bkt.clouddn.com/hexo/img/pdf.png&quot; alt=&quot;PDF图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决方法：&quot;&gt;&lt;a href=&quot;#解决方法：&quot; class=&quot;headerlink&quot; title=&quot;解决方法：&quot;&gt;&lt;/a&gt;解决方法：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 下载
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;http://www.huacolor.com/article/29720.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;4款免费PDF&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2. print
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;http://www.cutepdf-editor.com/support/writer.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cutepdf&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;笔者用rose画了个活动图，粘贴到word中，直接保存为PDF，打开之后，我的活动图就

光芒万丈了。上图：

word：

    
    </summary>
    
      <category term="7788" scheme="https://utihbi.github.io/categories/7788/"/>
    
    
      <category term="7788" scheme="https://utihbi.github.io/tags/7788/"/>
    
  </entry>
  
  <entry>
    <title>FourNums(LeetCode)</title>
    <link href="https://utihbi.github.io/2016/07/25/FourNums(LeetCode)%20/"/>
    <id>https://utihbi.github.io/2016/07/25/FourNums(LeetCode) /</id>
    <published>2016-07-25T09:05:06.000Z</published>
    <updated>2016-07-25T09:10:04.906Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Question-4Sum&quot;&gt;&lt;a href=&quot;#Question-4Sum&quot; class=&quot;headerlink&quot; title=&quot;Question:4Sum&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems/4sum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;4Sum&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Given an array S of n integers, are there elements a, b, c, and d in S such that 

a + b + c + d = target? 

Find all unique quadruplets in the array which gives the sum of target.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The solution set must not contain duplicate quadruplets.

For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.

A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;SourceCode&quot;&gt;&lt;a href=&quot;#SourceCode&quot; class=&quot;headerlink&quot; title=&quot;SourceCode:&quot;&gt;&lt;/a&gt;SourceCode:&lt;/h2&gt;&lt;h3 id=&quot;s1&quot;&gt;&lt;a href=&quot;#s1&quot; class=&quot;headerlink&quot; title=&quot;s1&quot;&gt;&lt;/a&gt;s1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//笔者提交版本；耗时：46ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; fourSum(int[] nums, int target) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; result = new ArrayList&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           int len = nums.length;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           if(len &amp;lt; 4)&amp;#123; return result;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           Arrays.sort(nums);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           if(nums[len-1]*4&amp;lt; target)&amp;#123;return result;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; listTmp = null;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           for(int i = 0,iLoc = len-3 ; i&amp;lt; iLoc; i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               //if(nums[i] &amp;gt; target &amp;amp;&amp;amp; target&amp;gt;=0)&amp;#123;break;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               if(nums[i]*4 &amp;gt; target )&amp;#123;break;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               int targetT = target - nums[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               listTmp = threeSum(nums,i+1,len ,targetT );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               for(List&amp;lt;Integer&amp;gt; tHV:listTmp)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    List&amp;lt;Integer&amp;gt; tmp = new ArrayList&amp;lt;Integer&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmp.add(nums[i]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmp.add(tHV.get(0));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmp.add(tHV.get(1));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmp.add(tHV.get(2));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    result.add(tmp);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               //debug&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               //if(i == 1)&amp;#123;System.out.println(result);&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               while(i&amp;lt;iLoc-1 &amp;amp;&amp;amp; nums[i]==nums[i+1])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   //System.out.println(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   i++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           if(null!=listTmp)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               listTmp.clear();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           return result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; threeSum(int[] nums,int start,int len, int target )&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; list = new ArrayList&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; listTmp = null;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(nums[len-1]*3&amp;lt; target)&amp;#123;return list;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = start,iLoc = len -2  ;i&amp;lt; iLoc;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               if(nums[i]*3 &amp;gt; target)&amp;#123;break;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              // if(nums[i] &amp;gt; target &amp;amp;&amp;amp; target&amp;gt;=0)&amp;#123;break;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               int targetT = target - nums[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               listTmp = twoSum(nums,i+1,len ,targetT );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               for(List&amp;lt;Integer&amp;gt; tV:listTmp)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    List&amp;lt;Integer&amp;gt; tmp = new ArrayList&amp;lt;Integer&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmp.add(nums[i]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmp.add(tV.get(0));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmp.add(tV.get(1));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    list.add(tmp);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                //debug1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               //if(i == 3 )&amp;#123;System.out.println(list);&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               while(i&amp;lt;iLoc-1 &amp;amp;&amp;amp; nums[i]==nums[i+1])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   i++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                  // System.out.println(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           if(null!=listTmp)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               listTmp.clear();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           return list;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; twoSum(int[] nums,int start,int len, int target )&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; list = new ArrayList&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Map&amp;lt;Integer,Integer&amp;gt; map = new HashMap&amp;lt;Integer,Integer&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(target&amp;gt; nums[len-1]+nums[len-2])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           return list;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = start,iLoc = len ;i&amp;lt; iLoc;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            /*int targetT = target - nums[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if(nums[i] &amp;gt; targetT)&amp;#123;break;&amp;#125;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //if(target &amp;lt; nums[i]*2)&amp;#123;break;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //这个地方还有的疑惑，为啥不可以这样写？&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            boolean move = false;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            while(i&amp;lt;len-1 &amp;amp;&amp;amp; nums[i]==nums[i+1])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   i++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   move = true;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           // if(target ==-2)&amp;#123;System.out.println(target);&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //System.out.println(target);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //[0,0,0,0] &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            //so add target!=nums[i]*2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if(map.containsKey(nums[i]) || target == nums[i]*2 &amp;amp;&amp;amp; move)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                List&amp;lt;Integer&amp;gt; tmp = new ArrayList&amp;lt;Integer&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                //进来却没有Key，是因为target == nums[i]*2，即还没来得及放进去&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                tmp.add(map.get(nums[i])==null ? nums[i]:map.get(nums[i]));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                tmp.add(nums[i]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                list.add(tmp);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            map.put(target - nums[i],nums[i]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        map.clear();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return list;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;s2&quot;&gt;&lt;a href=&quot;#s2&quot; class=&quot;headerlink&quot; title=&quot;s2&quot;&gt;&lt;/a&gt;s2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//该版本参考了Discuss,还没看Discuss；耗时：ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//待写&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question-4Sum&quot;&gt;&lt;a href=&quot;#Question-4Sum&quot; class=&quot;headerlink&quot; title=&quot;Question:4Sum&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems
    
    </summary>
    
      <category term="LeetCode" scheme="https://utihbi.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://utihbi.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>ThreeNums(LeetCode)</title>
    <link href="https://utihbi.github.io/2016/07/25/ThreeNums(LeetCode)/"/>
    <id>https://utihbi.github.io/2016/07/25/ThreeNums(LeetCode)/</id>
    <published>2016-07-25T03:20:06.000Z</published>
    <updated>2016-07-25T03:49:05.199Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Question-3Sum&quot;&gt;&lt;a href=&quot;#Question-3Sum&quot; class=&quot;headerlink&quot; title=&quot;Question:3Sum&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems/3sum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3Sum&lt;/a&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 

Find all unique triplets in the array which gives the sum of zero.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;SourceCode&quot;&gt;&lt;a href=&quot;#SourceCode&quot; class=&quot;headerlink&quot; title=&quot;SourceCode:&quot;&gt;&lt;/a&gt;SourceCode:&lt;/h2&gt;&lt;h3 id=&quot;s1&quot;&gt;&lt;a href=&quot;#s1&quot; class=&quot;headerlink&quot; title=&quot;s1&quot;&gt;&lt;/a&gt;s1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//笔者提交版本；耗时：67ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; threeSum(int[] nums) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; result = new ArrayList&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int len = nums.length;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if(len &amp;lt; 3)&amp;#123;return result;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Set&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt; resultSet = new HashSet&amp;lt;&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Arrays.sort(nums);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(int i = 0;i&amp;lt;len-2;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            for(int j = i+1;j&amp;lt;len-1;j++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                int target = 0 - nums[i] - nums[j];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(target &amp;lt; 0)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                int k = Arrays.binarySearch(nums,j+1,len,target);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                if(0 &amp;lt;= k)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    ArrayList&amp;lt;Integer&amp;gt; tmpArray = new  ArrayList&amp;lt;Integer&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmpArray.add(nums[i]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmpArray.add(nums[j]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    tmpArray.add(nums[k]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    resultSet.add(tmpArray);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        for(List&amp;lt;Integer&amp;gt; elem :resultSet)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            result.add(elem);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;s2&quot;&gt;&lt;a href=&quot;#s2&quot; class=&quot;headerlink&quot; title=&quot;s2&quot;&gt;&lt;/a&gt;s2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//该版本参考了Discuss,重新整理优化；耗时：8ms；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        public List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt; threeSum(int[] nums) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        int len = nums.length;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;  result = new ArrayList&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if(len &amp;lt; 3)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			return result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		//经过排序后，数据分为 负数区，0区，和正数区；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Arrays.sort(nums);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		for(int i = 0, jLoc = len -1 , iLoc = len - 2; i &amp;lt; iLoc ; i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			int target = 0 - nums[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			int jStart = i+1;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			int jEnd = jLoc;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//进入正数区&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			if(target &amp;lt; 0 )&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				break;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			while(jStart &amp;lt; jEnd)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				int sum = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				if(target == (sum = nums[jStart] + nums [jEnd]))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					addElemnts(result,nums[i],nums[jStart],nums[jEnd]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					//去掉重复元素&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					while(jStart &amp;lt; jEnd &amp;amp;&amp;amp; nums[jEnd-1] == nums[jEnd])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						jEnd--;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					while(jStart &amp;lt; jEnd &amp;amp;&amp;amp; nums[jStart+1] == nums[jStart])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						jStart++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					jEnd--;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					jStart++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;else if(target &amp;lt; sum )&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					jEnd--; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;else&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					jStart++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			//去掉重复元素&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			while((i &amp;lt; iLoc )&amp;amp;&amp;amp; nums[i+1] == nums[i])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				i++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	public void addElemnts(List&amp;lt;List&amp;lt;Integer&amp;gt;&amp;gt;  result,int a,int b,int c)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;Integer&amp;gt; tmpArr = new ArrayList&amp;lt;Integer&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		tmpArr.add(a);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		tmpArr.add(b);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		tmpArr.add(c);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		result.add(tmpArr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Question-3Sum&quot;&gt;&lt;a href=&quot;#Question-3Sum&quot; class=&quot;headerlink&quot; title=&quot;Question:3Sum&quot;&gt;&lt;/a&gt;Question:&lt;a href=&quot;https://leetcode.com/problems
    
    </summary>
    
      <category term="LeetCode" scheme="https://utihbi.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://utihbi.github.io/tags/LeetCode/"/>
    
  </entry>
  
</feed>
